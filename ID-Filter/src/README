
                               Worker ID Filter
--------------------------------------------------------------------------------------
unix> python  IDFilter.py 《门店分组表》路径 《员工信息表》路径 《总表》路径
--------------------------------------------------------------------------------------
一、目的：
该程序用于筛选同龄组被推送员工（技师）ID。项目组每周需要对13个区域推送两次信息，由于《员工信息表》、《总表》
随时会更新，每次生成的被推送名单可能不一致，手动操作工作量大而繁琐，且易错。另外，《门店分组表》基本固定不变，
这两个文件具有固定的数据结构，因而较容易编写数据筛选程序，且达到检查的目的。

二、所需文件
    《门店分组表》、《员工信息表》、《总表》（【步骤】简称表1、表2、表3）

三、所需变量
    《门店分组表》：门店名称             组别-同龄人现在                      所属区域
                   |                                                    |
    《员工信息表》： 部门     员工号     岗位名称（SPA师、理疗师、专家）  姓名    二级部门     入职日期

    《总表》：      区域 部门 工号 岗位 姓名 点号合计 销售业绩 入职日期 工资年月 出勤 离职时间 部门YG 入职日期YG 最早的入职日期 最近的入职日期

四、同龄组4个群体入职时间划分（现在：201X年Y月，'Y-i'表示Y的前i个月）
    0-3组     201X年Y-3月第1天  至  当天
    4-6组     201X年Y-6月第1天  至  201X年Y-4月最后1天
    7-12组    201X年Y-12月第1天 至  201X年Y-7月最后一天
    12+组     201X年Y-13月最后一天以及之前

五、检查标准
    员工信息表最终版的区域数和门店数是否和原门店分组表相等

六、步骤（伪代码）
    1、读取表1、2、3，分别转换成dataframe df1、df2、df_database
    2、df1中，按"组别"仅保留为"同龄人现在"的所有行，仅保留"门店名称"和"所属区域"两列
    3、df2中，按"岗位名称"仅保留为"SPA师"或"理疗师"或"专家"的所有行，仅保留"二级部门"、"部门"、"员工号"、"岗位名称"、"入职日期"5列
    4、预处理df_database，将“最近的入职日期”更新到df2已有的员工“入职日期”中
    5、以df1"所属区域"和"门店名称"为准，保留df2相对应"二级部门"和"部门"的所有行（区域相等且门店名相等时，才保留，防止重名）
    6、df2中，按"入职日期"划分标准，插入新变量"群体"，变量为数字1、2、3、4，具体来说：
                                 0-3组：  1
                                 4-6组：  2
                                 7—12组： 3
                                 12+组：  4
    7、导出CSV。df中，按"二级部门"（区域）和"群体"分组生成"区域-群体"CSV文档，每个区域4个，总共不多于52个（13*4）。命名格式：XX区域XX组.CSV
    8、检查